name: Create OverlayPlugin Release

on:
  push:
    branches:
      - main
    paths:
      - '**/AssemblyInfo.cs'

jobs:
  validate_tag:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.determine_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all tags

      - name: Determine Version
        id: determine_version
        shell: pwsh
        run: |
          $text = [System.IO.File]::ReadAllText("OverlayPlugin\Properties\AssemblyInfo.cs");
          $regex = [regex]::New('\[assembly: AssemblyVersion\("([0-9]+\.[0-9]+\.[0-9]+)\.[0-9]+"\)');
          $m = $regex.Match($text);
          if (-not $m) {
              echo "Error: Version number not found in the AssemblyInfo.cs!"
              exit 1
          }
          $version = $m.Groups[1]
          echo "::set-output name=version::$version"

      - name: Check Tag Exists
        shell: bash
        run: |
          if [ $(git tag -l "v${{ steps.determine_version.outputs.version }}") ]; then
              echo "Error: Existing git tag found. Exiting..."
              exit 1
          fi

  validate_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Validate AssemblyInfo Versions
        run: |
          python tools/validate_versions.py

  create_release:
    needs: [validate_tag, validate_version]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check dependencies cache
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ./Thirdparty
            ./OverlayPlugin.Core/Thirdparty
          key: ${{ runner.os }}-overlayplugin-${{ hashFiles('./tools/fetch_deps.py', './DEPS.py') }}
          restore-keys: |
            ${{ runner.os }}-overlayplugin-

      # Fetch dependencies only if cache-hit is false
      - name: Set up Python 3.8
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Fetch dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          python .\tools\fetch_deps.py

      - name: Set up msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Run Build
        run: build.bat
        shell: cmd

      - name: Create Tag
        shell: bash
        run: git tag "v${{ needs.validate_tag.outputs.version }}" && git push --tags

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: OverlayPlugin ${{ needs.validate_tag.outputs.version }}
          tag: v${{ needs.validate_tag.outputs.version }}
          artifacts: out/OverlayPlugin-${{ needs.validate_tag.outputs.version }}.zip
          artifactContentType: application/zip
          generateReleaseNotes: true
